version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-password}
      POSTGRES_DB: ${DB_NAME:-threat_intelligence}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    restart: always
    environment:
      - DB_HOST=postgres
      - DB_USER=${DB_USER:-postgres}
      - DB_PASS=${DB_PASS:-1234}
      - DB_NAME=${DB_NAME:-threat_intelligence}
      - DB_PORT=5432
      - NVD_API_KEY=${NVD_API_KEY}
      - OTX_API_KEY=${OTX_API_KEY}
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  pg_data: